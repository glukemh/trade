service: trade

frameworkVersion: "3"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    layer: true
    dockerizePip: true
    useDownloadCache: false
    useStaticCache: false
    slim: true

provider:
  name: aws
  runtime: python3.8
  deploymentMethod: direct
  iam:
    role:
      statements:
        # Allow functions to read/write objects in a bucket
        - Effect: Allow
          Action:
            - "s3:ListBucket"
          Resource: "arn:aws:s3:::trade-store"
        - Effect: Allow
          Action:
            - "s3:GetObject"
            - "s3:PutObject"
          Resource: "arn:aws:s3:::trade-store/*"

package:
  patterns:
    - "!node_modules/**"
    - "!venv/**"
    - "!bin/**"
    - "!lib/**"

functions:
  tradePerHour:
    handler: handler.run_1h_at_10
    layers:
      - Ref: PythonRequirementsLambdaLayer
    memorySize: 512
    events:
      - schedule: rate(1 hour)
  tradePerHourAt95:
    handler: handler.run_1h_at_95
    layers:
      - Ref: PythonRequirementsLambdaLayer
    memorySize: 512
    events:
      - schedule: rate(1 hour)
  tradePerMinute:
    handler: handler.run_1m_at_10
    layers:
      - Ref: PythonRequirementsLambdaLayer
    memorySize: 512
    events:
      - schedule: rate(1 minute)
  tradePerMinuteAt95:
    handler: handler.run_1m_at_95
    layers:
      - Ref: PythonRequirementsLambdaLayer
    memorySize: 512
    events:
      - schedule: rate(1 minute)
